{"version":3,"sources":["actions/api.js","actions/postMessage.js","components/useForm.js","components/PostMessageForm.js","components/PostMessages.js","reducers/postMessage.js","reducers/index.js","actions/store.js","App.js","index.js"],"names":["baseUrl","url","fetchAll","axios","get","fetchById","id","create","newRecord","post","update","updatedRecord","put","delete","ACTION_TYPES","useForm","initialFieldValues","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","resetForm","title","message","mapActionToProps","createPostMessage","data","onSuccess","dispatch","api","then","res","type","payload","catch","err","console","log","updatePostMessage","connect","state","postMessageList","postMessage","list","withStyles","theme","root","margin","spacing","form","display","flexWrap","justifyContent","postBtn","width","classes","props","useEffect","currentId","find","x","_id","autoComplete","noValidate","className","onSubmit","preventDefault","ButterToast","raise","content","Crisp","scheme","Cinnamon","SCHEME_PURPLE","icon","AssignmentTurnedIn","temp","Object","every","validate","TextField","variant","label","fullWidth","onChange","error","helperText","multiline","rows","Button","color","size","fetchAllPostMessages","deletePostMessage","paper","padding","smMargin","actionDiv","textAlign","Grid","container","item","xs","Paper","List","map","record","index","key","ListItem","ListItemText","Typography","onClick","window","confirm","DeleteSweep","Divider","component","initialState","reducers","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","App","Container","maxWidth","AppBar","position","align","vertical","POS_TOP","horizontal","POS_RIGHT","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d7ab9bb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = 'https://postbox-mernstack.herokuapp.com'\n\nexport default {\n    postMessage(url = baseUrl + \"\") {\n        return {\n            fetchAll: () => axios.get(url),\n            fetchById: id => axios.get(url + id),\n            create: newRecord => axios.post(url, newRecord),\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\n            delete: id => axios.delete(url + id)\n        }\n    }\n}","import api from \"./api\";\n\nexport const ACTION_TYPES = {\n    CREATE: 'CREATE',\n    UPDATE: 'UPDATE',\n    DELETE: 'DELETE',\n    FETCH_ALL: 'FETCH_ALL'\n}\n\nexport const fetchAll = () => dispatch => {\n    api.postMessage().fetchAll()\n        .then(res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_ALL,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err))\n\n}\n\nexport const create = (data, onSuccess) => dispatch => {\n    api.postMessage().create(data)\n        .then(res =>{\n            dispatch({\n                type: ACTION_TYPES.CREATE,\n                payload: res.data\n            })\n            onSuccess()\n        })\n        .catch(err => console.log(err))\n}\n\nexport const update = (id,data, onSuccess) => dispatch => {\n    api.postMessage().update(id,data)\n        .then(res =>{\n            dispatch({\n                type: ACTION_TYPES.UPDATE,\n                payload: res.data\n            })\n            onSuccess()\n        })\n        .catch(err => console.log(err))\n}\n\n\nexport const Delete = (id, onSuccess) => dispatch => {\n    api.postMessage().delete(id)\n        .then(res =>{\n            dispatch({\n                type: ACTION_TYPES.DELETE,\n                payload: id\n            })\n            onSuccess()\n        })\n        .catch(err => console.log(err))\n}","import React, { useEffect, useState } from \"react\";\n\nconst useForm = (initialFieldValues,setCurrentId) => {\n\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const resetForm =() =>{\n        setValues(initialFieldValues)\n        setErrors({})\n        setCurrentId(0)\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    };\n}\n\nexport default useForm;\n","import React, { useEffect, useState } from \"react\";\nimport { TextField, withStyles, Button } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\n\nconst initialFieldValues = {\n    title: '',\n    message: ''\n}\n\nconst styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1)\n        },\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    postBtn: {\n        width: \"50%\"\n    }\n})\n\nconst PostMessageForm = ({ classes, ...props }) => {\n\n    useEffect(() => {\n        if (props.currentId != 0){\n            setValues({\n                ...props.postMessageList.find(x => x._id == props.currentId)\n            })\n            setErrors({})\n        }\n    }, [props.currentId])\n\n    const validate = () => {\n        let temp = { ...errors }\n        temp.title = values.title ? \"\" : \"This field is required.\"\n        temp.message = values.message ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x == \"\")\n    }\n\n    var {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFieldValues,props.setCurrentId)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const onSuccess = () => {\n            ButterToast.raise({\n                content: <Cinnamon.Crisp title=\"Post Box\"\n                    content=\"Submitted successfully\"\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\n                    icon={<AssignmentTurnedIn />}\n                />\n            })\n            resetForm()\n        }\n        if (validate()) {\n            if (props.currentId == 0)\n                props.createPostMessage(values, onSuccess)\n            else\n                props.updatePostMessage(props.currentId, values, onSuccess)\n        }\n    }\n\n    return (\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\n            onSubmit={handleSubmit}>\n            <TextField\n                name=\"title\"\n                variant=\"outlined\"\n                label=\"Title\"\n                fullWidth\n                value={values.title}\n                onChange={handleInputChange}\n                {...(errors.title && { error: true, helperText: errors.title })}\n            />\n            <TextField\n                name=\"message\"\n                variant=\"outlined\"\n                label=\"Message\"\n                fullWidth\n                multiline\n                rows={4}\n                value={values.message}\n                onChange={handleInputChange}\n                {...(errors.message && { error: true, helperText: errors.message })}\n            />\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                className={classes.postBtn}\n            >Submit</Button>\n        </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    postMessageList: state.postMessage.list\n})\n\nconst mapActionToProps = {\n    createPostMessage: actions.create,\n    updatePostMessage: actions.update\n}\n\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessageForm));","import React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { DeleteSweep } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n    paper: {\n        margin: theme.spacing(3),\n        padding: theme.spacing(2)\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    },\n    actionDiv: {\n        textAlign: \"center\"\n    }\n})\n\nconst PostMessages = ({ classes, ...props }) => {\n    //const {classes, ...props} = props\n    const [currentId, setCurrentId] = useState(0)\n\n    useEffect(() => {\n        props.fetchAllPostMessages()\n    }, [])//DidMount\n\n    const onDelete = id => {\n        const onSuccess = () => {\n            ButterToast.raise({\n                content: <Cinnamon.Crisp title=\"Post Box\"\n                    content=\"Deleted successfully\"\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\n                    icon={<DeleteSweep />}\n                />\n            })\n        }\n        if (window.confirm('Are you sure to delete this record?'))\n            props.deletePostMessage(id,onSuccess)\n    }\n\n\n    return (\n        <Grid container>\n            <Grid item xs={5}>\n                <Paper className={classes.paper}>\n                    <PostMessageForm {...{ currentId, setCurrentId }} />\n                </Paper>\n            </Grid>\n            <Grid item xs={7}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {\n                            props.postMessageList.map((record, index) => {\n                                return (\n                                    <Fragment key={index}>\n                                        <ListItem>\n                                            <ListItemText>\n                                                <Typography variant=\"h5\">\n                                                    {record.title}\n                                                </Typography>\n                                                <div>\n                                                    {record.message}\n                                                </div>\n                                                <div className={classes.actionDiv}>\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => setCurrentId(record._id)}>\n                                                        Edit\n                                                    </Button>\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => onDelete(record._id)}>\n                                                        Delete\n                                                    </Button>\n                                                </div>\n                                            </ListItemText>\n                                        </ListItem>\n                                        <Divider component=\"li\" />\n                                    </Fragment>\n                                )\n                            })\n                        }\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapStateToProps = state => ({\n    postMessageList: state.postMessage.list\n})\n\nconst mapActionToProps = {\n    fetchAllPostMessages: actions.fetchAll,\n    deletePostMessage: actions.Delete\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\n","import { ACTION_TYPES } from \"../actions/postMessage\";\n\nconst initialState = {\n    list: []\n}\n//postMessage.list\nexport const postMessage = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_TYPES.FETCH_ALL:\n            return {\n                ...state,\n                list: [...action.payload]\n            }\n        case ACTION_TYPES.CREATE:\n            return {\n                ...state,\n                list: [...state.list, action.payload]\n            }\n        case ACTION_TYPES.UPDATE:\n            return {\n                ...state,\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\n            }\n\n        case ACTION_TYPES.DELETE:\n            return {\n                ...state,\n                list:state.list.filter(x => x._id != action.payload)\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { postMessage } from \"./postMessage\";\n\nexport const reducers = combineReducers({\n    postMessage\n})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducers } from \"../reducers\";\n\n\nexport const store = createStore(\n    reducers,\n    compose(\n        applyMiddleware(thunk),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport PostMessages from \"./components/PostMessages\";\nimport { store } from \"./actions/store\";\nimport { Container, AppBar, Typography } from \"@material-ui/core\";\nimport ButterToast,{ POS_RIGHT,POS_TOP } from \"butter-toast\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container maxWidth=\"lg\">\n        <AppBar position=\"static\" color=\"inherit\">\n          <Typography\n            variant=\"h2\"\n            align=\"center\">\n            Post Box\n          </Typography>\n        </AppBar>\n        <PostMessages />\n        <ButterToast position={{vertical:POS_TOP,horizontal:POS_RIGHT}}/>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );"],"sourceRoot":""}